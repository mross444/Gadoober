/*********************************************************************
** File name: Room.cpp
** Author:  Michael Ross
** Date:  3/22/17
** Description: Abstract class for game spaces
*********************************************************************/

#include "Room.hpp"

/*********************************************************************
*							constructor
*********************************************************************/
Room::Room()
{
	//do nothing
}

/*********************************************************************
*							 setNextRooms
*********************************************************************/
void Room::setNextRooms(Room* r1, Room* r2, Room* r3, Room* r4)
{
	nextRoom[0] = r1;
	nextRoom[1] = r2;
	nextRoom[2] = r3;
	nextRoom[3] = r4;
}

/*********************************************************************
*							 getNextRoom
*********************************************************************/
Room* Room::getNextRoom(int i)
{
	return nextRoom[i - 1];
}

/*********************************************************************
*							 getRoomScript
*********************************************************************/
std::string Room::getRoomScript()
{
	std::string s = "";

	for (int i = 0; i < 10; i++)
	{
		if (roomScript[i].delFlg == 0)
		{
			s += roomScript[i].text;
		}
	}

	return s;
}

/*********************************************************************
*			     		    getRoomOptions
*********************************************************************/
int Room::getRoomOptions()
{
	return roomOptions;
}

/*********************************************************************
*			         getRoomOptionInteractionType
*********************************************************************/
int Room::getRoomOptionInteractionType(int x)
{
	return roomMenuChoice[x - 1].interactionType;
}

/*********************************************************************
*			         getRoomOptionInteractionDelFlg
*********************************************************************/
bool Room::getRoomOptionInteractionDelFlg(int x)
{
	return roomMenuChoice[x - 1].delFlg;
}

/*********************************************************************
*			     	 	  decreaseRoomOptions
*********************************************************************/
void Room::decreaseRoomOptions()
{
	roomOptions--;
}

/*********************************************************************
*			     	 	  selectRoomOption
*********************************************************************/
Room* Room::selectRoomOption(int x)
{
	// virtual function
	return NULL;
}

/*********************************************************************
*			     		    getRoomItem
*********************************************************************/
std::string Room::getRoomItem(int x)
{
	if (roomItem[x].getDelFlg() == 0)
	{
		return roomItem[x].getItemName();
	}
	else
	{
		return "";
	}

}


/*********************************************************************
*			     		    getHasBrick
*********************************************************************/
bool Room::getHasBrick()
{
	return true;
}

/*********************************************************************
*			     		    setHasBrick
*********************************************************************/
void Room::setHasBrick(bool x)
{
	// virtual function - do nothing
}

/*********************************************************************
*			     		    getHasBrick
*********************************************************************/
bool Room::getWithDennis()
{
	return true;
}

/*********************************************************************
*			     		    setHasBrick
*********************************************************************/
void Room::setWithDennis(bool x)
{
	// virtual function - do nothing
}

/*********************************************************************
*			     	       getHasWoolCoat
*********************************************************************/
bool Room::getHasWoolCoat()
{
	return true;
}

/*********************************************************************
*			     		   setHasWoolCoat
*********************************************************************/
void Room::setHasWoolCoat(bool x)
{
	// virtual function - do nothing
}

/*********************************************************************
*			     		   update Room2
*********************************************************************/
void Room::updateRoom2()
{
	// virtual function - do nothing
}

/*********************************************************************
*			     	       getHasWoolCoat
*********************************************************************/
bool Room::getIsOnFire()
{
	return true;
}

/*********************************************************************
*			     		   setHasWoolCoat
*********************************************************************/
void Room::setIsOnFire(bool x)
{
	// virtual function - do nothing
}

/*********************************************************************
*			     		    updateDennis
*********************************************************************/
void Room::updateDennis()
{
	// virtual function - do nothing
}